
<http://metaphactory.foodie-cloud.org/container/queryContainer/AgroDataCube_-_full_example_with_wkt_output/context> {
  <http://metaphactory.foodie-cloud.org/container/queryContainer/AgroDataCube_-_full_example_with_wkt_output>
    a <http://spinrdf.org/sp#Query>, <http://spinrdf.org/sp#Select>;
    <http://www.w3.org/2000/01/rdf-schema#label> "WORKING - includes all steps for transformation coordinates to wkt (documentation)";
    <http://spinrdf.org/sp#text> """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX osm: <http://www.metaphacts.com/ontologies/osm#>
PREFIX time: <https://www.w3.org/TR/owl-time/#time>
PREFIX ignf: <http://data.ign.fr/def/ignf#>
PREFIX foodie: <http://foodie-cloud.com/model/foodie#>
PREFIX adc: <http://www.metaphacts.com/ontologies/adc#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX olu: <http://w3id.org/foodie/olu#>
SELECT ?fieldID ?year ?crop ?code ?area ?perimeter ?landuse (?geo as ?wkt) WHERE {
  BIND(\"POLYGON%20((4.2%2052,%204.2%2053,%204.3%2053,%204.3%2052,%204.2%2052))\"^^xsd:string as ?inputgeo)
  BIND(\"mais\"^^xsd:string as ?inputcrop)
 SERVICE <http://www.metaphacts.com/ontologies/platform/repository/federation#agrodatacube> {
#INPUTS
   ?results adc:yearInput 2018 .
   ?results ignf:epsgID 4326 .
   ?results adc:cropInput ?inputcrop .
   ?results adc:outputEPSG 4326 .
   ?results adc:pageSize 5 .
   ?results adc:pageOffset 0 .
   ?results geo:asWKT1 ?inputgeo .
#OUTPUTS
   ?results time:year ?year.
   ?results foodie:crop ?crop.
   ?results foodie:code ?code.
   ?results foodie:shortId ?fieldID .
   ?results adc:measureArea ?area .
   ?results adc:measurePerimeter ?perimeter .
   ?results olu:specificLandUse ?landuse .
   ?results adc:geometryType ?geoType.
   ?results adc:coordinates ?coordinates. 
 }
  BIND (STRDT(IF(STRSTARTS(UCASE(STR(?geoType)), \"POLYGON\"), CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(REPLACE(STR(?coordinates),\",\",\" \"),\"\\\\] \\\\[\",\",\"),\"\\\\[\\\\[\\\\[\",\"((\"),\"\\\\]\\\\]\\\\]\",\"))\")), IF(STRSTARTS(UCASE(STR(?geoType)), \"MULTIPOLYGON\"), CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(STR(?coordinates),\",\",\" \"),\"\\\\] \\\\[\",\",\"),\"\\\\[\\\\[\\\\[\",\"((\"),\"\\\\]\\\\]\\\\]\",\"))\"),\"\\\\],\\\\[\",\")),((\"),\"\\\\[\",\"(\"),\"\\\\]\",\")\")), IF(STRSTARTS(UCASE(STR(?geoType)), \"POINT\"), CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(STR(?coordinates),\",\",\" \"),\"\\\\[\\\\[\",\"(\"),\"\\\\]\\\\]\",\")\")),\"\"))),<http://www.openlinksw.com/schemas/virtrdf#Geometry>) as ?geo)
  
#POLYGON STEP BY STEP
#  BIND (IF(STRSTARTS(UCASE(STR(?geoType)), \"POLYGON\"), CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(REPLACE(STR(?coordinates),\",\",\" \"),\"\\\\] \\\\[\",\",\"),\"\\\\[\\\\[\\\\[\",\"((\"),\"\\\\]\\\\]\\\\]\",\"))\")), \"\") as ?testfinal)
#  BIND (CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(REPLACE(STR(?coordinates),\",\",\" \"),\"\\\\] \\\\[\",\",\"),\"\\\\[\\\\[\\\\[\",\"((\"),\"\\\\]\\\\]\\\\]\",\"))\")) as ?testfinal)
#  BIND (REPLACE(STR(?coordinates),\",\",\" \") as ?testing)
#  BIND (REPLACE(?testing,\"\\\\] \\\\[\",\",\") as ?testing1)
#  BIND (REPLACE(?testing1,\"\\\\[\\\\[\\\\[\",\"((\") as ?testing2)
#  BIND (REPLACE(?testing2,\"\\\\]\\\\]\\\\]\",\"))\") as ?testing3)
#  BIND (CONCAT(UCASE(STR(?geoType)),?testing3) as ?testing4)
#POINT EXAMPLE
#  BIND(CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(\"[[6.7356789004703,53.1015569498727]]\",\",\",\" \"),\"\\\\[\\\\[\",\"(\"),\"\\\\]\\\\]\",\")\")) as ?testfinal1)
#MULTIPOLYGON EXAMPLE
# BIND(CONCAT(UCASE(STR(?geoType)),REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\"[[[[6.7356789004703,53.1015569498727],[6.7356002648113,53.101560207885],[6.73554355837347,53.1015940173437],[6.73547950287132,53.1016863608772],[6.73476296117917,53.1026550639294],[6.73376641317364,53.1040251912839],[6.73376013177066,53.1040280096803],[6.73372258896911,53.1040448611221],[6.73302849882062,53.1049970897799],[6.73329531118977,53.1050812838725],[6.73331197343322,53.105062350886],[6.73717599422331,53.1063919738275],[6.73720313029025,53.1063700093322],[6.73819158391955,53.1055697557985],[6.73831327665762,53.1054754283716],[6.73851824243033,53.1054938959757],[6.73853074846595,53.1054964487116],[6.73930024157951,53.1056535734546],[6.74013993511968,53.1047740155232],[6.74089511772994,53.1039767028044],[6.74094038683292,53.1039367471975],[6.74185703158214,53.1029632999434],[6.74196765566778,53.1028500975526],[6.74192484042385,53.1028327696803],[6.74179279100223,53.1028011822765],[6.74167162810456,53.1027796538632],[6.74156462931891,53.1027645975429],[6.74010977162274,53.1024903669941],[6.73924517728136,53.1023310951334],[6.7381020947792,53.1021212526558],[6.73720153789073,53.1019449999667],[6.73702565565771,53.1019019577636],[6.73582305367785,53.1015924518001],[6.7356789004703,53.1015569498727]],[[6.73472914711614,53.1032201762501],[6.73585948473464,53.1036128638758],[6.73683969754627,53.1039490871275],[6.73680978783051,53.103980312456],[6.73581700618541,53.1036351266877],[6.73469658710858,53.1032526441138],[6.73472914711614,53.1032201762501]]]]\",\",\",\" \"),\"\\\\] \\\\[\",\",\"),\"\\\\[\\\\[\\\\[\",\"((\"),\"\\\\]\\\\]\\\\]\",\"))\"),\"\\\\],\\\\[\",\")),((\"),\"\\\\[\",\"(\"),\"\\\\]\",\")\")) as ?testfinal1)
} LIMIT 5""";
    a <http://www.w3.org/ns/prov#Entity>;
    <http://www.w3.org/ns/prov#wasAttributedTo> <http://www.metaphacts.com/resource/user/admin>;
    <http://www.w3.org/ns/prov#generatedAtTime> "2019-09-03T06:56:50.941Z"^^<http://www.w3.org/2001/XMLSchema#dateTime> .
  
  <http://www.metaphacts.com/ontologies/platform#queryContainer> <http://www.w3.org/ns/ldp#contains>
      <http://metaphactory.foodie-cloud.org/container/queryContainer/AgroDataCube_-_full_example_with_wkt_output> .
  
  <http://metaphactory.foodie-cloud.org/container/queryContainer/AgroDataCube_-_full_example_with_wkt_output>
    a <http://www.w3.org/ns/ldp#Resource> .
}
